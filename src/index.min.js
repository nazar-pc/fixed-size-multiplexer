/*
 0BSD
*/
(function(){function f(a){var b;var c=0;var d=1;for(b=a.length-1;0<=b;--b){var e=a[b];c+=e*d;d*=Math.pow(2,8)}return c}function k(a,b){var c=new Uint8Array(b);for(--b;0<=b;--b){var d=b;var e=a%Math.pow(2,8);a=(a-e)/Math.pow(2,8);c.set([e],d)}return c}function h(a,b,c){a.j=b;a.f=c;for(a.b=1;b>=Math.pow(2,8);)++a.b,b/=Math.pow(2,8);a.a=new Uint8Array(0)}function g(){function a(c,b){if(!(this instanceof a))return new a(c,b);h(this,c,b);this.c=!0}function b(c,a){if(!(this instanceof b))return new b(c,
a);h(this,c,a);this.c=[]}a.prototype={feed:function(c){var b;var a=b=new Uint8Array(this.a.length+this.b+c.length);a.set(this.a);a.set(k(c.length,this.b),this.a.length);a.set(c,this.b+this.a.length);this.a=b;this.c=!1},have_more_blocks:function(){return!this.c},get_block:function(){var c;var b=new Uint8Array(this.f);if(this.have_more_blocks()){if(this.f>this.a.length){var a=Math.ceil((this.f-this.a.length)/this.b);a=c=new Uint8Array(this.a.length+a*this.b);a.set(this.a);this.a=c;this.c=!0}b.set(this.a.subarray(0,
this.f));this.a=this.a.subarray(this.f)}return b}};Object.defineProperty(a.prototype,"constructor",{value:a});b.prototype={feed:function(c){this.have_more_data()?this.c.push(c):this.g(c)},g:function(c){var a;var b=a=new Uint8Array(this.a.length+c.length);b.set(this.a);b.set(c,this.a.length);this.a=a},have_more_data:function(){this.i();return this.h()},h:function(){for(var c;;){if(this.a.length<=this.b)return!1;if(c=f(this.a.subarray(0,this.b)))break;else this.a=this.a.subarray(this.b)}return this.a.length>=
this.b+c},get_data:function(){if(!this.have_more_data())return null;var c=f(this.a.subarray(0,this.b));var a=this.a.subarray(this.b,this.b+c);this.a=this.a.subarray(this.b+c);return a},i:function(){for(var a;!this.h()&&this.c.length;)a=f(this.a.subarray(0,this.b)),a||(this.a=new Uint8Array(0)),this.g(this.c.shift())}};Object.defineProperty(b.prototype,"constructor",{value:b});return{Multiplexer:a,Demultiplexer:b}}"function"===typeof define&&define.amd?define(g):"object"===typeof exports?module.exports=
g():this.fixed_size_multiplexer=g()}).call(this);